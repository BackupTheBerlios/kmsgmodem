# Makefile.in generated by automake 1.9.2 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.13 $ 
# src/Makefile.  Generated from Makefile.in by config.pl.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





SOURCES = $(kmsgmodem_SOURCES)

srcdir = .
top_srcdir = ..
VPATH = .
pkgdatadir = $(datadir)/$
pkglibdir = $(libdir)/$
pkgincludedir = $(includedir)/$
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/ginstall -c -p
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
bin_PROGRAMS = kmsgmodem$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(shelldesktopdir)" \
	"$(DESTDIR)$(shellrcdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kmsgmodem_OBJECTS = main.$(OBJEXT) kmsgmodem.$(OBJEXT) \
	connection.$(OBJEXT) generalsettings.$(OBJEXT) \
	kmsgmodemwidget.$(OBJEXT) modemsettings.$(OBJEXT) \
	modemsettingsdialog.$(OBJEXT) mymodemsettingsdialog.$(OBJEXT) \
	simplemodem.$(OBJEXT) usrsmpthread.$(OBJEXT) \
	settings.$(OBJEXT) filebase.$(OBJEXT)
#>- kmsgmodem_OBJECTS = $(am_kmsgmodem_OBJECTS)
#>+ 9
kmsgmodem_final_OBJECTS = kmsgmodem.all_cpp.o 
kmsgmodem_nofinal_OBJECTS = main.$(OBJEXT) kmsgmodem.$(OBJEXT) \
	connection.$(OBJEXT) generalsettings.$(OBJEXT) \
	kmsgmodemwidget.$(OBJEXT) modemsettings.$(OBJEXT) \
	modemsettingsdialog.$(OBJEXT) mymodemsettingsdialog.$(OBJEXT) \
	simplemodem.$(OBJEXT) usrsmpthread.$(OBJEXT) \
	settings.$(OBJEXT) filebase.$(OBJEXT) GeneralWidget.$(OBJEXT) kmsgmodemwidgetbase.$(OBJEXT) ModemSettings.$(OBJEXT) Modem.$(OBJEXT)
kmsgmodem_OBJECTS = $(kmsgmodem_nofinal_OBJECTS)
#kmsgmodem_OBJECTS = $(kmsgmodem_final_OBJECTS)
am__DEPENDENCIES_1 =
kmsgmodem_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(kmsgmodem_SOURCES)
DIST_SOURCES = $(kmsgmodem_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
shelldesktopDATA_INSTALL = $(INSTALL_DATA)
shellrcDATA_INSTALL = $(INSTALL_DATA)
DATA = $(shelldesktop_DATA) $(shellrc_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = ${SHELL} /home/wirr/Dokumente/Programme/Projekte/KMsgModem/kmsgmodem/admin/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/wirr/Dokumente/Programme/Projekte/KMsgModem/kmsgmodem/admin/missing --run tar
AR = ar
ARTSCCONFIG = /opt/kde/bin/artsc-config
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/wirr/Dokumente/Programme/Projekte/KMsgModem/kmsgmodem/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/wirr/Dokumente/Programme/Projekte/KMsgModem/kmsgmodem/admin/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -ansi -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -O2   -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in
CPP = gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wnon-virtual-dtor -Wno-long-long -Wundef -Wall -W -Wpointer-arith -Wwrite-strings -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wconversion -Wchar-subscripts -O2 -Wformat-security -Wmissing-format-attribute -fno-exceptions -fno-check-new -fno-common
CYGPATH_W = echo
DCOPIDL = /opt/kde/bin/dcopidl
DCOPIDL2CPP = /opt/kde/bin/dcopidl2cpp
DCOPIDLNG = 
DCOP_DEPENDENCIES = $(DCOPIDL)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/msgfmt
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
KCFG_DEPENDENCIES = 
KCONFIG_COMPILER = 
KDECONFIG = /opt/kde/bin/kde-config
KDE_EXTRA_RPATH = 
KDE_INCLUDES = -I/opt/kde/include
KDE_LDFLAGS = -L/opt/kde/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_XSL_STYLESHEET = /opt/kde/share/apps/ksgmltools2/customization/kde-chunk.xsl
LDFLAGS = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBZ = -lz
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIO = -lkio
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/wirr/Dokumente/Programme/Projekte/KMsgModem/kmsgmodem/admin/missing --run makeinfo
MCOPIDL = /opt/kde/bin/mcopidl
MEINPROC = /opt/kde/bin/meinproc
MOC = /usr/lib/qt/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJEXT = o
PACKAGE = $
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
QTE_NORTTI = 
QT_INCLUDES = -I/usr/lib/qt/include
QT_LDFLAGS = -L/usr/lib/qt/lib
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TOPSUBDIRS =  doc po src
UIC = /usr/lib/qt/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = $
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
all_includes = -I/opt/kde/include -I/usr/lib/qt/include -I/usr/X11R6/include 
all_libraries = -L/usr/X11R6/lib -L/usr/lib/qt/lib -L/opt/kde/lib 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
include_ARTS_FALSE = #
include_ARTS_TRUE = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/wirr/Dokumente/Programme/Projekte/KMsgModem/kmsgmodem/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /opt/kde/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /opt/kde/lib
kde_libs_htmldir = /opt/kde/share/doc/HTML
kde_libs_prefix = /opt/kde
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /opt/kde/lib/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /opt/kde
program_transform_name = s,x,x,
qt_includes = /usr/lib/qt/include
qt_libraries = /usr/lib/qt/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

# these are the headers for your project
noinst_HEADERS = kmsgmodem.h filebase.h

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO
KDE_ICON = kmsgmodem

# the application source, library search path, and link libraries
#>- kmsgmodem_SOURCES = main.cpp kmsgmodem.cpp connection.cpp generalsettings.cpp \
#>- 	kmsgmodemwidget.cpp modemsettings.cpp modemsettingsdialog.cpp mymodemsettingsdialog.cpp \
#>- 	simplemodem.cpp usrsmpthread.cpp GeneralWidget.ui kmsgmodemwidgetbase.ui \
#>- 	ModemSettings.ui Modem.ui settings.cpp filebase.cpp
#>+ 4
kmsgmodem_SOURCES=main.cpp kmsgmodem.cpp connection.cpp generalsettings.cpp \
	kmsgmodemwidget.cpp modemsettings.cpp modemsettingsdialog.cpp mymodemsettingsdialog.cpp \
	simplemodem.cpp usrsmpthread.cpp   \
	  settings.cpp filebase.cpp GeneralWidget.cpp kmsgmodemwidgetbase.cpp ModemSettings.cpp Modem.cpp

kmsgmodem_LDFLAGS = $(KDE_RPATH) $(all_libraries)
kmsgmodem_LDADD = -lartskde $(LIB_KDEUI)

# this is where the desktop file will go 
shelldesktopdir = $(kde_appsdir)/Utilities
shelldesktop_DATA = kmsgmodem.desktop

# this is where the shell's XML-GUI resource file goes
shellrcdir = $(kde_datadir)/kmsgmodem
shellrc_DATA = kmsgmodemui.rc
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kmsgmodem$(EXEEXT): $(kmsgmodem_OBJECTS) $(kmsgmodem_DEPENDENCIES) 
	@rm -f kmsgmodem$(EXEEXT)
	$(CXXLINK) $(kmsgmodem_LDFLAGS) $(kmsgmodem_OBJECTS) $(kmsgmodem_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/connection.Po
include ./$(DEPDIR)/filebase.Po
include ./$(DEPDIR)/generalsettings.Po
include ./$(DEPDIR)/kmsgmodem.Po
include ./$(DEPDIR)/kmsgmodemwidget.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/modemsettings.Po
include ./$(DEPDIR)/modemsettingsdialog.Po
include ./$(DEPDIR)/mymodemsettingsdialog.Po
include ./$(DEPDIR)/settings.Po
include ./$(DEPDIR)/simplemodem.Po
include ./$(DEPDIR)/usrsmpthread.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-shelldesktopDATA: $(shelldesktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shelldesktopdir)" || $(mkdir_p) "$(DESTDIR)$(shelldesktopdir)"
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shelldesktopDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shelldesktopdir)/$$f'"; \
	  $(shelldesktopDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shelldesktopdir)/$$f"; \
	done

uninstall-shelldesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shelldesktopdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shelldesktopdir)/$$f"; \
	done
install-shellrcDATA: $(shellrc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shellrcdir)" || $(mkdir_p) "$(DESTDIR)$(shellrcdir)"
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shellrcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  $(shellrcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

uninstall-shellrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(shelldesktopdir)" "$(DESTDIR)$(shellrcdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

#>- install-data-am: install-shelldesktopDATA install-shellrcDATA
#>+ 1
install-data-am: install-kde-icons  install-shelldesktopDATA install-shellrcDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
#>- 	uninstall-shelldesktopDATA uninstall-shellrcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am \
	uninstall-shelldesktopDATA uninstall-shellrcDATA

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-shelldesktopDATA install-shellrcDATA install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-shelldesktopDATA \
	uninstall-shellrcDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/kmsgmodem.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
modemsettingsdialog.moc: $(srcdir)/modemsettingsdialog.h
	$(MOC) $(srcdir)/modemsettingsdialog.h -o modemsettingsdialog.moc

#>+ 2
mocs: modemsettingsdialog.moc

#>+ 3
kmsgmodem.moc: $(srcdir)/kmsgmodem.h
	$(MOC) $(srcdir)/kmsgmodem.h -o kmsgmodem.moc

#>+ 2
mocs: kmsgmodem.moc

#>+ 3
kmsgmodemwidget.moc: $(srcdir)/kmsgmodemwidget.h
	$(MOC) $(srcdir)/kmsgmodemwidget.h -o kmsgmodemwidget.moc

#>+ 2
mocs: kmsgmodemwidget.moc

#>+ 3
generalsettings.moc: $(srcdir)/generalsettings.h
	$(MOC) $(srcdir)/generalsettings.h -o generalsettings.moc

#>+ 2
mocs: generalsettings.moc

#>+ 3
modemsettings.moc: $(srcdir)/modemsettings.h
	$(MOC) $(srcdir)/modemsettings.h -o modemsettings.moc

#>+ 2
mocs: modemsettings.moc

#>+ 3
clean-metasources:
	-rm -f  modemsettingsdialog.moc kmsgmodem.moc kmsgmodemwidget.moc generalsettings.moc modemsettings.moc

#>+ 2
KDE_DIST=hi48-app-kmsgmodem.png settings.h simplemodem.h kmsgmodemwidgetbase.ui connection.h hi32-app-kmsgmodem.png kmsgmodem.lsm usrsmpthread.h mymodemsettingsdialog.h GeneralWidget.ui Makefile.in kmsgmodemui.rc ModemSettings.ui kmsgmodem.desktop Modem.ui modemsettingsdialog.h hi16-app-kmsgmodem.png modemsettings.h Makefile.am generalsettings.h kmsgmodemwidget.h 

#>+ 7
clean-ui:
	-rm -f \
	GeneralWidget.cpp GeneralWidget.h GeneralWidget.moc \
	kmsgmodemwidgetbase.cpp kmsgmodemwidgetbase.h kmsgmodemwidgetbase.moc \
	ModemSettings.cpp ModemSettings.h ModemSettings.moc \
	Modem.cpp Modem.h Modem.moc 

#>+ 2
docs-am:

#>+ 13
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-kmsgmodem.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kmsgmodem.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-kmsgmodem.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kmsgmodem.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-kmsgmodem.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/kmsgmodem.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kmsgmodem.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kmsgmodem.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/kmsgmodem.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kmsgmodem.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/kmsgmodem.cpp $(srcdir)/connection.cpp $(srcdir)/generalsettings.cpp $(srcdir)/kmsgmodemwidget.cpp $(srcdir)/modemsettings.cpp $(srcdir)/modemsettingsdialog.cpp $(srcdir)/mymodemsettingsdialog.cpp $(srcdir)/simplemodem.cpp $(srcdir)/usrsmpthread.cpp $(srcdir)/settings.cpp $(srcdir)/filebase.cpp GeneralWidget.cpp kmsgmodemwidgetbase.cpp ModemSettings.cpp Modem.cpp  ModemSettings.moc generalsettings.moc kmsgmodemwidget.moc modemsettingsdialog.moc kmsgmodem.moc GeneralWidget.moc kmsgmodemwidgetbase.moc modemsettings.moc Modem.moc
	@echo 'creating kmsgmodem.all_cpp.cpp ...'; \
	rm -f kmsgmodem.all_cpp.files kmsgmodem.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kmsgmodem.all_cpp.final; \
	for file in main.cpp kmsgmodem.cpp connection.cpp generalsettings.cpp kmsgmodemwidget.cpp modemsettings.cpp modemsettingsdialog.cpp mymodemsettingsdialog.cpp simplemodem.cpp usrsmpthread.cpp settings.cpp filebase.cpp GeneralWidget.cpp kmsgmodemwidgetbase.cpp ModemSettings.cpp Modem.cpp ; do \
	  echo "#include \"$$file\"" >> kmsgmodem.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kmsgmodem.all_cpp.final; \
	done; \
	cat kmsgmodem.all_cpp.final kmsgmodem.all_cpp.files > kmsgmodem.all_cpp.cpp; \
	rm -f kmsgmodem.all_cpp.final kmsgmodem.all_cpp.files

#>+ 3
clean-final:
	-rm -f kmsgmodem.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kmsgmodem_OBJECTS="$(kmsgmodem_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kmsgmodem_OBJECTS="$(kmsgmodem_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kmsgmodem_OBJECTS="$(kmsgmodem_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kmsgmodem_OBJECTS="$(kmsgmodem_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 25
$(srcdir)/kmsgmodem.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
$(srcdir)/modemsettingsdialog.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
$(srcdir)/settings.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
$(srcdir)/main.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
kmsgmodemwidget.lo: kmsgmodemwidget.moc 
$(srcdir)/connection.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
kmsgmodem.o: kmsgmodem.moc 
generalsettings.o: generalsettings.moc 
modemsettings.o: modemsettings.moc 
modemsettingsdialog.o: modemsettingsdialog.moc 
nmcheck: 
modemsettings.lo: modemsettings.moc 
$(srcdir)/mymodemsettingsdialog.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
$(srcdir)/modemsettings.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
nmcheck-am: nmcheck
generalsettings.lo: generalsettings.moc 
$(srcdir)/usrsmpthread.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
$(srcdir)/kmsgmodemwidget.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
modemsettingsdialog.lo: modemsettingsdialog.moc 
kmsgmodemwidget.o: kmsgmodemwidget.moc 
kmsgmodem.lo: kmsgmodem.moc 
$(srcdir)/generalsettings.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
$(srcdir)/simplemodem.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 
$(srcdir)/filebase.cpp: GeneralWidget.h kmsgmodemwidgetbase.h ModemSettings.h Modem.h 

#>+ 60
Modem.cpp: $(srcdir)/Modem.ui Modem.h Modem.moc
	rm -f Modem.cpp
	echo '#include <kdialog.h>' > Modem.cpp
	echo '#include <klocale.h>' >> Modem.cpp
	$(UIC) -tr ${UIC_TR} -i Modem.h $(srcdir)/Modem.ui > Modem.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Modem.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Modem,g" >> Modem.cpp ;\
	rm -f Modem.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Modem.moc"' >> Modem.cpp; else rm -f Modem.cpp ; exit $$ret ; fi

Modem.h: $(srcdir)/Modem.ui
	$(UIC) -o Modem.h $(srcdir)/Modem.ui

Modem.moc: Modem.h
	$(MOC) Modem.h -o Modem.moc

GeneralWidget.cpp: $(srcdir)/GeneralWidget.ui GeneralWidget.h GeneralWidget.moc
	rm -f GeneralWidget.cpp
	echo '#include <kdialog.h>' > GeneralWidget.cpp
	echo '#include <klocale.h>' >> GeneralWidget.cpp
	$(UIC) -tr ${UIC_TR} -i GeneralWidget.h $(srcdir)/GeneralWidget.ui > GeneralWidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" GeneralWidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_GeneralWidget,g" >> GeneralWidget.cpp ;\
	rm -f GeneralWidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "GeneralWidget.moc"' >> GeneralWidget.cpp; else rm -f GeneralWidget.cpp ; exit $$ret ; fi

GeneralWidget.h: $(srcdir)/GeneralWidget.ui
	$(UIC) -o GeneralWidget.h $(srcdir)/GeneralWidget.ui

GeneralWidget.moc: GeneralWidget.h
	$(MOC) GeneralWidget.h -o GeneralWidget.moc

kmsgmodemwidgetbase.cpp: $(srcdir)/kmsgmodemwidgetbase.ui kmsgmodemwidgetbase.h kmsgmodemwidgetbase.moc
	rm -f kmsgmodemwidgetbase.cpp
	echo '#include <kdialog.h>' > kmsgmodemwidgetbase.cpp
	echo '#include <klocale.h>' >> kmsgmodemwidgetbase.cpp
	$(UIC) -tr ${UIC_TR} -i kmsgmodemwidgetbase.h $(srcdir)/kmsgmodemwidgetbase.ui > kmsgmodemwidgetbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kmsgmodemwidgetbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kmsgmodemwidgetbase,g" >> kmsgmodemwidgetbase.cpp ;\
	rm -f kmsgmodemwidgetbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kmsgmodemwidgetbase.moc"' >> kmsgmodemwidgetbase.cpp; else rm -f kmsgmodemwidgetbase.cpp ; exit $$ret ; fi

kmsgmodemwidgetbase.h: $(srcdir)/kmsgmodemwidgetbase.ui
	$(UIC) -o kmsgmodemwidgetbase.h $(srcdir)/kmsgmodemwidgetbase.ui

kmsgmodemwidgetbase.moc: kmsgmodemwidgetbase.h
	$(MOC) kmsgmodemwidgetbase.h -o kmsgmodemwidgetbase.moc

ModemSettings.cpp: $(srcdir)/ModemSettings.ui ModemSettings.h ModemSettings.moc
	rm -f ModemSettings.cpp
	echo '#include <kdialog.h>' > ModemSettings.cpp
	echo '#include <klocale.h>' >> ModemSettings.cpp
	$(UIC) -tr ${UIC_TR} -i ModemSettings.h $(srcdir)/ModemSettings.ui > ModemSettings.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" ModemSettings.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_ModemSettings,g" >> ModemSettings.cpp ;\
	rm -f ModemSettings.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "ModemSettings.moc"' >> ModemSettings.cpp; else rm -f ModemSettings.cpp ; exit $$ret ; fi

ModemSettings.h: $(srcdir)/ModemSettings.ui
	$(UIC) -o ModemSettings.h $(srcdir)/ModemSettings.ui

ModemSettings.moc: ModemSettings.h
	$(MOC) ModemSettings.h -o ModemSettings.moc
